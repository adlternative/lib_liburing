#include "../../include/errno_util.hpp"
namespace adl {
#define X(c)                                                                   \
  case c##_:                                                                   \
    return #c

const char *errorToString(unsigned char op) {
  switch (op) {
    X(EPERM);
    X(ENOENT);
    X(ESRCH);
    X(EINTR);
    X(EIO);
    X(ENXIO);
    X(E2BIG);
    X(ENOEXEC);
    X(EBADF);
    X(ECHILD);
    X(EAGAIN);
    X(ENOMEM);
    X(EACCES);
    X(EFAULT);
    X(ENOTBLK);
    X(EBUSY);
    X(EEXIST);
    X(EXDEV);
    X(ENODEV);
    X(ENOTDIR);
    X(EISDIR);
    X(EINVAL);
    X(ENFILE);
    X(EMFILE);
    X(ENOTTY);
    X(ETXTBSY);
    X(EFBIG);
    X(ENOSPC);
    X(ESPIPE);
    X(EROFS);
    X(EMLINK);
    X(EPIPE);
    X(EDOM);
    X(ERANGE);
    X(EDEADLK);
    X(ENAMETOOLONG);
    X(ENOLCK);
    X(ENOSYS);
    X(ENOTEMPTY);
    X(ELOOP);
    X(ENOMSG);
    X(EIDRM);
    X(ECHRNG);
    X(EL2NSYNC);
    X(EL3HLT);
    X(EL3RST);
    X(ELNRNG);
    X(EUNATCH);
    X(ENOCSI);
    X(EL2HLT);
    X(EBADE);
    X(EBADR);
    X(EXFULL);
    X(ENOANO);
    X(EBADRQC);
    X(EBADSLT);
    X(EBFONT);
    X(ENOSTR);
    X(ENODATA);
    X(ETIME);
    X(ENOSR);
    X(ENONET);
    X(ENOPKG);
    X(EREMOTE);
    X(ENOLINK);
    X(EADV);
    X(ESRMNT);
    X(ECOMM);
    X(EPROTO);
    X(EMULTIHOP);
    X(EDOTDOT);
    X(EBADMSG);
    X(EOVERFLOW);
    X(ENOTUNIQ);
    X(EBADFD);
    X(EREMCHG);
    X(ELIBACC);
    X(ELIBBAD);
    X(ELIBSCN);
    X(ELIBMAX);
    X(ELIBEXEC);
    X(EILSEQ);
    X(ERESTART);
    X(ESTRPIPE);
    X(EUSERS);
    X(ENOTSOCK);
    X(EDESTADDRREQ);
    X(EMSGSIZE);
    X(EPROTOTYPE);
    X(ENOPROTOOPT);
    X(EPROTONOSUPPORT);
    X(ESOCKTNOSUPPORT);
    X(EOPNOTSUPP);
    X(EPFNOSUPPORT);
    X(EAFNOSUPPORT);
    X(EADDRINUSE);
    X(EADDRNOTAVAIL);
    X(ENETDOWN);
    X(ENETUNREACH);
    X(ENETRESET);
    X(ECONNABORTED);
    X(ECONNRESET);
    X(ENOBUFS);
    X(EISCONN);
    X(ENOTCONN);
    X(ESHUTDOWN);
    X(ETOOMANYREFS);
    X(ETIMEDOUT);
    X(ECONNREFUSED);
    X(EHOSTDOWN);
    X(EHOSTUNREACH);
    X(EALREADY);
    X(EINPROGRESS);
    X(ESTALE);
    X(EUCLEAN);
    X(ENOTNAM);
    X(ENAVAIL);
    X(EISNAM);
    X(EREMOTEIO);
    X(EDQUOT);
    X(ENOMEDIUM);
    X(EMEDIUMTYPE);
    X(ECANCELED);
    X(ENOKEY);
    X(EKEYEXPIRED);
    X(EKEYREVOKED);
    X(EKEYREJECTED);
    X(EOWNERDEAD);
    X(ENOTRECOVERABLE);
    X(ERFKILL);
    X(EHWPOISON);
  };
  return "<INVALID errno>";
}

#undef X

} // namespace adl